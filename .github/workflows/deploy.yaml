name: deployment

on: workflow_dispatch

jobs:
  build-project:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: "8.3"
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
        
      - name: Install Composer dependencies cache
        run: |
          composer update
          composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Compoile the JavaScript and CSS
        run: npm ci

      - name: Setup Project
        run: |
          php artisan cache:clear
          php artisan config:clear
          npm run build
        
      - name: Create deployment
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  deploy-project:
    name: Deploy project
    runs-on: ubuntu-latest
    needs: build-project

    steps: 
      - uses: actions/download-artifact@v2
        with: 
          name: app-build

      # Access the server and determine the source and target path
      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.DOMAIN }}/releases # The target is where the zip files will be placed
   
      - name: Extract archived and create directories
        uses: appleboy/ssh-action@master

        # Passing environment variables to the script
        env:
            GITHUB_SHA: ${{ github.sha }}
            SOURCE_PATH: "/releases/app/public"
            DESTINATION_PATH: "/releases/"

        # Access server with the following credentials
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA

          # Script to execute on remote server
          script: |
            mkdir -p ${{ secrets.DOMAIN }}/releases/app
            tar -xzvf ${{ secrets.DOMAIN }}/releases/${GITHUB_SHA}.tar.gz -C ${{ secrets.DOMAIN }}/releases/app

            cd ${{ secrets.DOMAIN }}/releases/app
            
            composer2 update
            composer2 install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate

            cp -R ${{ secrets.DOMAIN}}/releases/app/public/js ${{ secrets.DOMAIN }}/public_html/
            cp -R ${{ secrets.DOMAIN}}/releases/app/public/images ${{ secrets.DOMAIN }}/public_html/
            cp -R ${{ secrets.DOMAIN}}/releases/app/public/build ${{ secrets.DOMAIN }}/public_html/
            cp -R ${{ secrets.DOMAIN}}/releases/app/public/css ${{ secrets.DOMAIN }}/public_html/

  clean-up:
    name: Clean up
    runs-on: ubuntu-latest
    needs: [ build-project, deploy-project ]
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DOMAIN }}/releases && ls -t -1 | tail -n +6 | xargs rm -rf